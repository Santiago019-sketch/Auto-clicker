-- Auto Clicker with GUI using LÖVE framework
local love = require("love")

-- Initialize variables
local running = false
local clickCount = 0
local clickDelay = 0.001 -- Delay between clicks in seconds
local lastClickTime = 0

-- Button dimensions
local buttonWidth = 200
local buttonHeight = 60

-- Colors
local colors = {
    background = {0.2, 0.2, 0.2},
    button = {0.3, 0.7, 0.3},
    buttonHover = {0.4, 0.8, 0.4},
    buttonStop = {0.7, 0.3, 0.3},
    text = {1, 1, 1}
}

-- Initialize LÖVE
function love.load()
    -- Set window properties
    love.window.setMode(300, 200)
    love.window.setTitle("Auto Clicker")
    
    -- Calculate button position
    buttonX = (love.graphics.getWidth() - buttonWidth) / 2
    buttonY = (love.graphics.getHeight() - buttonHeight) / 2
end

-- Update function
function love.update(dt)
    if running then
        local currentTime = love.timer.getTime()
        if currentTime - lastClickTime >= clickDelay then
            -- Simulate mouse click
            love.mouse.isDown(1)
            clickCount = clickCount + 1
            lastClickTime = currentTime
        end
    end
end

-- Draw function
function love.draw()
    -- Draw background
    love.graphics.setBackgroundColor(colors.background)
    
    -- Draw button
    if running then
        love.graphics.setColor(colors.buttonStop)
    else
        love.graphics.setColor(colors.button)
    end
    
    -- Draw main button
    love.graphics.rectangle(
        "fill",
        buttonX,
        buttonY,
        buttonWidth,
        buttonHeight,
        10 -- rounded corners
    )
    
    -- Draw button text
    love.graphics.setColor(colors.text)
    local buttonText = running and "Stop (F6)" or "Start (F5)"
    local textWidth = love.graphics.getFont():getWidth(buttonText)
    local textHeight = love.graphics.getFont():getHeight()
    
    love.graphics.print(
        buttonText,
        buttonX + (buttonWidth - textWidth) / 2,
        buttonY + (buttonHeight - textHeight) / 2
    )
    
    -- Draw click counter
    love.graphics.print(
        "Clicks: " .. clickCount,
        10,
        10
    )
    
    -- Draw CPS (Clicks Per Second) indicator
    love.graphics.print(
        "Speed: " .. string.format("%.1f", 1/clickDelay) .. " CPS",
        10,
        30
    )
end

-- Mouse click handler
function love.mousepressed(x, y, button)
    if button == 1 then
        -- Check if click is within button bounds
        if x >= buttonX and x <= buttonX + buttonWidth and
           y >= buttonY and y <= buttonY + buttonHeight then
            running = not running
            if running then
                lastClickTime = love.timer.getTime()
            end
        end
    end
end

-- Keyboard handler
function love.keypressed(key)
    if key == "f5" then
        running = true
        lastClickTime = love.timer.getTime()
    elseif key == "f6" then
        running = false
    elseif key == "escape" then
        love.event.quit()
    end
end

-- Run the program
function love.run()
    if love.load then love.load() end

    return function()
        -- Process events
        love.event.pump()
        for name, a,b,c,d,e,f in love.event.poll() do
            if name == "quit" then
                return 0
            end
            love.handlers[name](a,b,c,d,e,f)
        end

        -- Update
        if love.update then love.update() end

        -- Draw
        if love.graphics.isActive() then
            love.graphics.origin()
            love.graphics.clear(love.graphics.getBackgroundColor())
            if love.draw then love.draw() end
            love.graphics.present()
        end
    end
end
